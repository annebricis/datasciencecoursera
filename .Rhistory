result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-if(correlations[!is.na(correlations)]>0){
correlations[!is.na(correlations)]
}else{
rep(0,0)
}
}
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
result<-correlations[!is.na(correlations)]
}
cr <- corr("specdata", 5000)
summary(cr)
vec<-rep(0,0)
vec
summary(vec)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
print(result)
result<-correlations[!is.na(correlations)]
}
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
print(summary(result))
result<-correlations[!is.na(correlations)]
}
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
print(summary(result),length(result))
result<-correlations[!is.na(correlations)]
}
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
print(length(result))
result<-correlations[!is.na(correlations)]
}
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
if(length(result)>0){
result<-correlations[!is.na(correlations)]
}
}
cr <- corr("specdata", 5000)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
if(length(result)>0){
print(summary(result))
result<-correlations[!is.na(correlations)]
}
}
cr <- corr("specdata", 5000)
cr <- corr("specdata", 500)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
if(length(result)>0){
print(summary(result))
result<-correlations[!is.na(correlations)]
print(summary(result))
}
}
cr <- corr("specdata", 500)
cr <- corr("specdata", 1000)
cr <- corr("specdata", 400)
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
print(summary(result))
if(length(result)>0){
result<-correlations[!is.na(correlations)]
}
print(summary(result))
}
cr <- corr("specdata", 400)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata", 400)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
result<-rep(0,length(correlations[!is.na(correlations)]))
if(length(result)>0){
result<-correlations[!is.na(correlations)]
}
}
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
numOfFiles<-length(dir('specdata'))
correlations<-rep(NA,numOfFiles)
for(i in 1:numOfFiles){
## format datafile name using id provided by prefixing with 0 or 00 if necessary
prefix<-if(i<10){
"00"
}else if(i<100){
"0"
}else{
""
}
monitorFile<-paste(prefix,i,".csv",sep="")      ## sets up file name eg 002.csv
result<-complete(directory,i)
observed <-result[1,2]
if(observed > threshold){
data<-read.csv(file.path(directory,monitorFile))
sulfate<-data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
nitrate<-data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
correlations[i]<-cor(sulfate,nitrate)
}
}
correlations[!is.na(correlations)]
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
getwd
getwd()
setwd('..')
getwd()
setwd('..')
getwd()
setwd('datasciencecoursera')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
ls(file())
ls -a
list.files()
submit()
1
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
x<-list(a=1:5,b=rnorm(10))
x
x<-list(a=1:5,b=rnorm(10))
x
lapply(x,mean)
sapply(x,mean)
rm(ls())
rm(list=list())
rm(list = ls())
library(datasets)
data("iris")
data(iris)
iris
head(iris)
?iris
iris
tapply(iris$Sepal.Length,mean)
tapply(iris$Sepal.Length)
?tapply
?iris
tapply(iris$Sepal.Length,Species)
tapply(iris$Sepal.Length,iris$Species)
tapply(iris$Sepal.Length,iris$Species="virginica", mean)
tapply(iris$Sepal.Length,iris$Species, mean)
tapply(iris$Sepal.Length,iris$Species["virginica"], mean)
tapply(iris$Sepal.Length,iris$Species[iris$Species=="virginica"], mean)
tapply(iris$Sepal.Length,iris$Species, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
head(mtcars)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
avghp<-tapply(mtcars$hp, mtcars$cyl, mean)
avghp
avghp[3]
avghp[3]-avghp[4]
avghp[3]-avghp[1]
debug(ls)
ls
ls()
ls()
all.names
